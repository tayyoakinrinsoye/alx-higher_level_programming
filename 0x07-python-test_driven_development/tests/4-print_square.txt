============================
How to use 4-print_square.py
============================

This module defines a square-printing function ``print_square(size)``.

Usage
=====

Squares are printed using the ``#`` character. The parameter ``size``
represents the height and the width of the square

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #

::

    >>> print_square(4)
    ####
    ####
    ####
    ####

::

    >>> print_square(6)
    ######
    ######
    ######
    ######
    ######
    ######

Invalid sizes
=============

The parameter ``size`` must be an integer. Otherwise, a TypeError is raised

::

    >>> print_square("four")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square("5.5")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

if ``size`` is less than zero, a ValueError is raised

::

    >>> print_square(-5)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Note that type checking occurs before value checking

::

    >>> print_square(-2.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

At leat one argument must be provided

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'